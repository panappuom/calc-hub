name: Ensure auto-merge for owner/Codex PRs

on:
  pull_request_target:
    types: [opened, reopened, synchronize, labeled, ready_for_review]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  ensure:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      # ラベルが無ければ作成
      - name: Ensure 'automerge' label exists
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const name = 'automerge';
            try {
              await github.rest.issues.getLabel({ owner, repo, name });
            } catch {
              await github.rest.issues.createLabel({
                owner, repo, name,
                color: '2ea043',
                description: 'Enable auto-merge (squash) automatically'
              });
            }

      # Codex 由来ブランチ or リポ所有者の PR に自動ラベル付与
      - id: auto_label
        name: Auto-label 'automerge' when PR is owner or codex/*
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;
            const issue_number = pr.number;
            const isOwner = pr.user.login === context.payload.repository.owner.login;
            const isCodex = pr.head.ref && pr.head.ref.startsWith('codex/');
            const labels = (pr.labels || []).map(l => l.name);
            if ((isOwner || isCodex) && !labels.includes('automerge')) {
              await github.rest.issues.addLabels({ owner, repo, issue_number, labels: ['automerge'] });
              core.setOutput('labeled', 'true');
            } else {
              core.setOutput('labeled', 'false');
            }

      # 直近のラベル状態を API で取り直す（同一ランでも確実に反映）
      - id: get_labels
        name: Get current labels
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.payload.pull_request.number;
            const { data } = await github.rest.issues.listLabelsOnIssue({ owner, repo, issue_number });
            core.setOutput('list', data.map(l => l.name).join(','));

      # Draft のままだと有効化に失敗するため、Draft解除イベントでも再試行されるよう上の types に ready_for_review を追加済み
      # ここでは Draft でない時だけ有効化を試みる
      - name: Enable auto-merge (squash)
        if: contains(steps.get_labels.outputs.list, 'automerge') && (github.event.pull_request.draft == false)
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: SQUASH
