name: QA Lighthouse (PR)

on:
  pull_request:
    paths:
      - 'src/**'
      - 'public/**'
      - '*.css'
      - '*.astro'

concurrency:
  group: qa-lighthouse-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Detect Playwright version
        id: playwright-version
        run: |
          node <<'NODE' >> "$GITHUB_OUTPUT"
          import { readFileSync } from 'node:fs';
          const pkg = JSON.parse(readFileSync('package.json', 'utf8'));
          console.log(`version=${pkg.devDependencies.playwright}`);
          NODE
        shell: bash

      - name: Cache npm directory
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci
        env:
          NPM_CONFIG_CACHE: ~/.npm

      - name: Build site and install Chromium
        run: npm run pretest:a11y
        env:
          NPM_CONFIG_CACHE: ~/.npm

      - name: Select Lighthouse config
        id: lighthouse-config
        env:
          LABELS_JSON: ${{ toJson(github.event.pull_request.labels.*.name) }}
        run: |
          if echo "$LABELS_JSON" | grep -q '"qa:a11y"'; then
            echo "config=.lighthouserc.pr-full.json" >> "$GITHUB_OUTPUT"
            echo "variant=full" >> "$GITHUB_OUTPUT"
          else
            echo "config=.lighthouserc.pr-smoke.json" >> "$GITHUB_OUTPUT"
            echo "variant=smoke" >> "$GITHUB_OUTPUT"
          fi

      - name: Run Lighthouse accessibility checks
        id: lighthouse-run
        run: npm run test:a11y
        env:
          LHCI_CONFIG: ${{ steps.lighthouse-config.outputs.config }}
          ALLOW_ASSERT_FAILURE: '1'
        continue-on-error: true

      - name: Ensure Lighthouse command succeeded
        if: steps.lighthouse-run.outcome == 'failure'
        run: exit 1

      - name: Upload Lighthouse artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report-${{ steps.lighthouse-config.outputs.variant }}
          path: .lighthouseci
