name: QA Lighthouse (PR)

on:
  pull_request:
    paths:
      - 'src/**'
      - 'public/**'
      - '*.css'
      - '*.astro'

concurrency:
  group: qa-lighthouse-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Detect Playwright version
        id: playwright-version
        run: |
          node <<'NODE' >> "$GITHUB_OUTPUT"
          import { readFileSync } from 'node:fs';
          const pkg = JSON.parse(readFileSync('package.json', 'utf8'));
          console.log(`version=${pkg.devDependencies.playwright}`);
          NODE
        shell: bash

      - name: Cache npm directory
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci
        env:
          NPM_CONFIG_CACHE: ~/.npm

      - name: Build site and prepare Lighthouse bundle
        run: |
          npm run build
          node scripts/prepare-lhci-dist.mjs
        env:
          NPM_CONFIG_CACHE: ~/.npm

      - name: Install Chromium via Playwright (disabled on CI)
        if: ${{ runner.os == 'Linux' && false }}
        run: node scripts/setup-playwright.mjs

      - name: Setup Chromium
        id: setup-chromium
        uses: browser-actions/setup-chromium@v1

      - name: Set CHROME_PATH
        run: echo "CHROME_PATH=${{ steps.setup-chromium.outputs.chromium-path }}" >> $GITHUB_ENV

      - name: Select Lighthouse config
        id: lighthouse-config
        env:
          LABELS_JSON: ${{ toJson(github.event.pull_request.labels.*.name) }}
        run: |
          if echo "$LABELS_JSON" | grep -q '"qa:a11y"'; then
            echo "config=.lighthouserc.pr-full.json" >> "$GITHUB_OUTPUT"
            echo "variant=full" >> "$GITHUB_OUTPUT"
          else
            echo "config=.lighthouserc.pr-smoke.json" >> "$GITHUB_OUTPUT"
            echo "variant=smoke" >> "$GITHUB_OUTPUT"
          fi

      - name: Run Lighthouse accessibility checks
        id: lighthouse-run
        run: npm run test:a11y
        env:
          LHCI_CONFIG: ${{ steps.lighthouse-config.outputs.config }}
          ALLOW_ASSERT_FAILURE: '1'
        continue-on-error: true

      - name: Ensure Lighthouse command succeeded
        if: steps.lighthouse-run.outcome == 'failure'
        run: exit 1

      - name: Run /deals/ QA checks
        id: deals-qa
        run: node scripts/run-deals-qa.mjs
        continue-on-error: true

      - name: Upload /deals/ QA report
        if: steps.deals-qa.outcome == 'failure' && hashFiles('qa-deals-report.md') != ''
        uses: actions/upload-artifact@v4
        with:
          name: deals-qa-report
          path: qa-deals-report.md

      - name: Comment on PR when /deals/ QA fails
        if: steps.deals-qa.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const reportPath = path.join(process.env.GITHUB_WORKSPACE, 'qa-deals-report.md');
            let body = 'QA checks failed for /deals/.';
            if (fs.existsSync(reportPath)) {
              body += `\n\n${fs.readFileSync(reportPath, 'utf8')}`;
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body,
            });

      - name: Ensure /deals/ QA succeeded
        if: steps.deals-qa.outcome == 'failure'
        run: exit 1

      - name: Upload Lighthouse artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report-${{ steps.lighthouse-config.outputs.variant }}
          path: .lighthouseci
