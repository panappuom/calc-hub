---
import "../../styles/global.css";
import skus from "../../data/skus.json";

let data;
try {
  const url = new URL(
    import.meta.env.BASE_URL + "data/prices/today.json",
    Astro.site
  );
  const res = await fetch(url);
  if (res.ok) {
    data = await res.json();
  }
} catch {}
const { sku } = Astro.params;
const skuInfo = skus.find(s => s.id === sku);
const priceInfo = data?.items?.find(i => i.skuId === sku);

export function getStaticPaths() {
  return skus.map(s => ({ params: { sku: s.id } }));
}
---
<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <base href={import.meta.env.BASE_URL} />
    <title>{skuInfo ? skuInfo.q : sku} – 価格一覧</title>
  </head>
  <body>
    <div class="wrap">
        <a href="./" class="small">← トップ</a>
      <h1>{skuInfo ? skuInfo.q : sku} – 価格一覧</h1>
      <p>ショップ別の価格を一覧しています。並び順は目安（価格・ポイント相当）です。</p>
      <p class="small">
        {data
          ? `取得日時: ${new Date(data.updatedAt).toLocaleString('ja-JP')}`
          : 'データ少'}
      </p>
      {skuInfo && (
        <div>
          <h2>仕様</h2>
          <ul>
            {skuInfo.filters && <li>フィルタ: {skuInfo.filters.join(', ')}</li>}
            {skuInfo.brandHints && <li>ブランド候補: {skuInfo.brandHints.join(', ')}</li>}
          </ul>
        </div>
      )}
      {priceInfo ? (
        <>
          <table>
            <thead>
              <tr><th>ショップ</th><th>価格</th><th>ポイント倍率</th></tr>
            </thead>
            <tbody>
              {priceInfo.list.map(it => (
                <tr>
                  <td>{it.shopName} <a href={it.itemUrl} target="_blank" rel="nofollow noopener">ショップで確認</a></td>
                  <td>{it.price}円</td>
                  <td>{it.pointRate}%</td>
                </tr>
              ))}
            </tbody>
          </table>
          <p class="small">価格・在庫は常に変動します。購入前にリンク先で最新情報をご確認ください。</p>
          <h2>価格推移 (30日)</h2>
          <canvas id="chart" width="600" height="200" data-sku={sku}></canvas>
          <p id="chart-msg" class="small"></p>
          <p class="small">過去データはAPI仕様・収集失敗で欠損する場合があります。</p>
          <script>
            const canvas = document.getElementById('chart');
            const sku = canvas.dataset.sku;
            const msg = document.getElementById('chart-msg');
            const base = document.baseURI;
            fetch(`${base}data/price-history/${sku}.json?t=${Date.now()}`).then(r => r.json()).then(hist => {
              const list = Array.isArray(hist) ? hist : Object.values(hist).find(Array.isArray) || [];
              const data = list.filter(d => Number.isFinite(d.price)).slice(-30);
              if (data.length < 2) {
                canvas.style.display = 'none';
                msg.textContent = 'データ少';
                return;
              }
              const ctx = canvas.getContext('2d');
              const prices = data.map(d => d.price);
              const min = Math.min(...prices);
              const max = Math.max(...prices);
              const range = max - min || 1;
              ctx.beginPath();
              data.forEach((p, i) => {
                const x = i * (canvas.width / (data.length - 1));
                const y = canvas.height - (p.price - min) / range * canvas.height;
                if (i === 0) ctx.moveTo(x, y); else ctx.lineTo(x, y);
              });
              ctx.strokeStyle = '#0070f3';
              ctx.stroke();
            }).catch(() => {
              canvas.style.display = 'none';
              msg.textContent = 'データ少';
            });
          </script>
        </>
      ) : (
        <p>データ少</p>
      )}
    </div>
  </body>
</html>
